⇇!DOCTYPE⇔gw1⇉⇇META⇔Wed Apr 24 2024 15:06:09 GMT-0600 (Mountain Daylight Time)⇉⇇TITLE⇔Classic Snake⇔gw_user⇉⇇JSCONTENT⇔/* This is a classic snake
implementation in Gear Works.

[This is a sample]

(C) 2024 by the Gear Works Team
*/

const box = 20;
let snake = [{ x: 200, y: 200 }];
let food = { x: Math.floor(Math.random() * 20) * box, y: Math.floor(Math.random() * 20) * box };
let score = 0;
let direction = "right";


function changeDirection() {
    const key = keyboard[keyboard.length - 1];
    if (key === "ArrowLeft" && direction !== "right") direction = "left";
    else if (key === "ArrowUp" && direction !== "down") direction = "up";
    else if (key === "ArrowRight" && direction !== "left") direction = "right";
    else if (key === "ArrowDown" && direction !== "up") direction = "down";
}

let tick = 0;

function forever() {
    tick++;
    draw.background("lightgreen");

    // Draw snake
    snake.forEach(segment => {
        draw.fillStyle = "green";
        draw.fillRect(segment.x, segment.y, box, box);
    });

    // Draw food
    draw.fillStyle = "red";
    draw.fillRect(food.x, food.y, box, box);

    // Draw score
    draw.fillStyle = "black";
    draw.font = "50px Arial";
    draw.textAlign = "left";
    draw.fillText("Score: " + score, 10, 60);

    // Move snake
    changeDirection();
    let head = { x: snake[0].x, y: snake[0].y };
    if (tick % 10 == 0) {
        if (direction === "right") head.x += box;
        if (direction === "left") head.x -= box;
        if (direction === "up") head.y -= box;
        if (direction === "down") head.y += box;
        
        // Check collision with wall
        if (
            head.x < 0 ||
            head.y < 0 ||
            head.x >= 800 ||
            head.y >= 800
            ) {
            gearWorks.error("Game over!");
        }
    
        // Check collision with self
        if (snake.some(segment => segment.x === head.x && segment.y === head.y)) {
            gearWorks.error("Game over!");
        }
    
        // Check collision with food
        if (head.x === food.x && head.y === food.y) {
            score++;
            food = { x: Math.floor(Math.random() * 20) * box, y: Math.floor(Math.random() * 20) * box };
        } else {
            snake.pop();
        }
        
        // Add new head
        snake.unshift(head);
    }

    

    
}⇉⇇END⇉